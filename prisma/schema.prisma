generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  password      String
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts                  Account[]
  sessions                  Session[]
  budgetAccounts            BudgetAccount[]
  budgetAccountTransactions BudgetAccountTransaction[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model BudgetAccount {
  id             String            @id @default(cuid())
  userId         String
  title          String
  description    String?
  icon           String?
  monthlyLimit   Decimal           @default(0)
  type           BudgetAccountType @default(Debit)
  currentBalance Decimal           @default(0)
  user           User              @relation(fields: [userId], references: [id], onDelete: Cascade)

  transactionsTo   BudgetAccountTransaction[] @relation("ToBudgetAccount")
  transactionsFrom BudgetAccountTransaction[] @relation("FromBudgetAccount")
}

enum BudgetAccountType {
  Income
  Debt
  SpendingCategory
  Credit
  Debit
  Goal
}

model BudgetAccountTransaction {
  id                  String   @id @default(cuid())
  userId              String
  fromBudgetAccountId String
  toBudgetAccountId   String
  amount              Decimal
  description         String
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  user              User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  fromBudgetAccount BudgetAccount @relation("FromBudgetAccount", fields: [fromBudgetAccountId], references: [id], onDelete: Cascade)
  toBudgetAccount   BudgetAccount @relation("ToBudgetAccount", fields: [toBudgetAccountId], references: [id], onDelete: Cascade)
}
